#!/usr/bin/env bash

KIND='change|chore|docs|feat|fix|perf|refactor|style'
EXCLUDES=(
    'cache' '.cache'
    'temp' '.temp' 'tmp' '.tmp'
    '.git' '.history'
    '.Trash'
    'target' 'debug'
    'node_modules'
    'build'
    'dist'
    'src'
    'tests'
    'packages'
)

function listup() {
    local dir="$1"
    local pfx=''
    local max=3
    local fil=false
    local EXD
    local OPT
    local OPTARG
    local OPTIND=1
    local find_opts

    shift

    while getopts p:m:f OPT; do
        case "$OPT" in
        p) pfx="$OPTARG" ;;
        m) max="$OPTARG" ;;
        f) fil=true ;;
        *) exit 1 ;;
        esac
    done

    find_opts="-mindepth 1 -maxdepth $max"

    if [ $fil ]; then
        : # file
    else
        find_opts+=" -type d"
    fi

    for EXD in "${EXCLUDES[@]}"; do
        find_opts+=" ! \\( -name '$EXD' -o -path '*/$EXD/*' \\)"
    done

    (cd "$dir" && eval find . "$find_opts" | sed "s|^./|$pfx|" | sed 's|^[@#]||g' | paste -sd '|')
}

MSG="$1"

function match() {
    if [ "$(echo -n "$MSG" | grep -oP "$1")" != '' ]; then
        exit 0
    fi
}

function check() {
    local kind="$1"
    local allow_breaking="${2:-true}"
    local scope=''
    local i

    for i in "$@"; do
        if [ "$i" != '' ]; then
            if [ "$scope" = '' ]; then
                scope="$i"
            else
                scope="$scope|$i"
            fi
        fi
    done

    if [ "$scope" != '' ]; then
        # https://github.com/googleapis/release-please/blob/v16.12.2/src/commit.ts#L94
        if [ "$allow_breaking" ]; then
            match "^($kind)\((${scope//$/\\$})\)!?: ."
        else
            match "^($kind)\((${scope//$/\\$})\): ."
        fi
    fi
}

match "^($KIND)!?: ."
check "$KIND" "$(listup . -m 1 -f)"
check "$KIND|test" "$(listup src)"
match '^test: .'
match '^ci: .'
match '^chore\(deps\): .'
match '^chore\(deps-dev\): .'

echo 'Invalid commit message format.'
exit 1
