#!/usr/bin/env bash

KIND='(chore|docs|feat|fix|perf|refactor|release|revert|style|test)'
EXCLUDES=('.*' 'build' 'debug' 'dist' 'node_modules' 'out' 'src' 'target')

function listup() {
    local dir="$1"
    local pfx=''
    local max=4
    local OPT
    local find_opt

    shift

    while getopts "p:m:a" OPT; do
        case "$OPT" in
        p) pfx="$OPTARG" ;;
        m) max="$OPTARG" ;;
        *) exit 1 ;;
        esac
    done

    find_opt="-mindepth 1 -maxdepth $max -type d"

    for EXD in "${EXCLUDES[@]}"; do
        find_opt+=" ! \\( -name '$EXD' -o -path '*/$EXD/*' \\)"
    done

    (cd "$dir" && eval find . "$find_opt" | sed 's|[@#]||g' | sed "s|^./|$pfx|" | paste -sd '|')
}

MSG="$1"

function match() {
    if [ "$(echo -n "$MSG" | grep -oP "$1")" != '' ]; then
        exit 0
    fi
}

function check() {
    local scope=''
    local i

    for i in "$@"; do
        if [ "$i" != '' ]; then
            if [ "$scope" = '' ]; then
                scope="$i"
            else
                scope="$scope|$i"
            fi
        fi
    done

    if [ "$scope" != '' ]; then
        match "^$KIND\((${scope//$/\\$})\): ."
    fi
}

match "^$KIND: ."
match "^chore\((deps|deps-dev)\): ."
check "$(listup . -m 1)"
check "$(listup src)"

echo 'Invalid commit message format.'
exit 1
